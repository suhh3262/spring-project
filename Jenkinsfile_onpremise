pipeline {
    agent any

    tools {
        jdk "jdk17"         // JDK 17 사용
        gradle "Ga"         // Gradle 사용
    }
    
    environment {
        DOCKERHUB_CREDENTIALS = credentials('dockerhubToken')  // DockerHub 자격 증명
        IMAGE = 'pinkcandy02/springproject'  // Docker 이미지 이름
        NAMESPACE = 'spring-project'  // 배포할 Kubernetes 네임스페이스
        KUBECONFIG_CREDENTIALS = credentials('kube-config-id')  // Kubeconfig 파일에 대한 Jenkins 자격 증명
        KUBE_MASTER_IP = "10.100.202.122"
    }

    stages {
        stage('Checkout') {
            steps {
                echo 'Cloning repository from GitHub'
                git branch: 'main',
                    credentialsId: 'git-token',
                    url: 'https://github.com/suhh3262/spring-project.git'
            }
        }

        stage('Gradle Build') {
            steps {
                echo 'Building the project using Gradle'
                sh 'chmod +x ./gradlew'  // 실행 권한 부여
                sh './gradlew build -x test'  // 테스트를 제외하고 빌드
            }
        }

        stage('Docker Image Build') {
            steps {
                echo 'Building Docker image'
                dir("${env.WORKSPACE}") {
                    // Docker 이미지 빌드
                    sh """
                        docker build -t pinkcandy02/springproject:$BUILD_NUMBER .
                        docker tag pinkcandy02/springproject:$BUILD_NUMBER pinkcandy02/springproject:latest
                    """
                }
            }
        }

        stage('Docker Login') {
            steps {
                echo 'Logging into DockerHub'
                sh 'echo $DOCKERHUB_CREDENTIALS_PSW | docker login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin'
            }
        }

        stage('Docker Image Push') {
            steps {
                echo 'Pushing Docker image to DockerHub'
                sh "docker push pinkcandy02/springproject:latest"
            }
        }

        stage('Cleaning up Docker images') {
            steps {
                echo 'Cleaning up unused Docker images on Jenkins server'
                sh """
                    docker rmi pinkcandy02/springproject:$BUILD_NUMBER
                    docker rmi pinkcandy02/springproject:latest
                """
            }
        }

        stage('Deploy to Kubernetes') {
            steps {
                echo 'Deploying to Kubernetes
